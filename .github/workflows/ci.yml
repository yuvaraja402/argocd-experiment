name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Image Build and Push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Build and Push Docker Image
        run: |
          docker buildx build --platform linux/amd64 -t cyberprince/argocd-experiment:v1.0 --push ./backend-code

  authenticate:
    name: GCP Authenticate
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: 'auth'
        name: Configure GCP Credentials
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      # Set up the gcloud CLI
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2.1.1'
        with:
          project_id: 'flask-argocd-experiment'
          install_components: 'kubectl'
          version: '>= 363.0.0'

      # Install gke-gcloud-auth-plugin
      - name: Install gke-gcloud-auth-plugin
        run: |
          curl -sSL https://sdk.cloud.google.com | bash
          exec -l $SHELL
          gcloud components install gke-gcloud-auth-plugin

      # Enable required GCP services
      - name: Enable Kubernetes Engine API
        run: |
          gcloud services enable container.googleapis.com
          gcloud services enable compute.googleapis.com   

      # Creating GKE cluster with required settings
      - name: 'Check if GKE Cluster Exists'
        run: |
          if ! gcloud container clusters describe argocd-experiment-cluster --zone europe-west3-a --project flask-argocd-experiment; then
            gcloud container clusters create argocd-experiment-cluster \
            --zone europe-west3-a \
            --num-nodes 1 \
            --machine-type e2-micro \
            --enable-ip-alias \
            --release-channel regular \
            --no-enable-autorepair \
            --async
          else
            echo "Cluster already exists, skipping creation."
          fi

  deploy:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    needs: authenticate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: 'auth'
        name: Re-authenticate GCP Credentials for Deployment
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: Set up Kubernetes context
        run: |
          gcloud container clusters get-credentials argocd-experiment-cluster --zone europe-west3-a --project flask-argocd-experiment

      # Create FlaskApp deployment with kubectl create, if it doesn't already exist
      - name: 'Create FlaskApp Deployment if not exists'
        run: |
          if ! kubectl get deployment flaskapp; then
            kubectl create deployment flaskapp --image=cyberprince/argocd-experiment:v1.0
          else
            echo "Deployment flaskapp already exists, skipping creation."
          fi

      # Expose FlaskApp service, if it doesn't already exist
      - name: 'Expose FlaskApp Service if not exists'
        run: |
          if ! kubectl get svc flaskapp; then
            kubectl expose deployment flaskapp --type=LoadBalancer --port=5050 --target-port=5050
          else
            echo "Service flaskapp already exists, skipping creation."
          fi

      # Optional: Update the Docker image version in GKE deployment
      - name: 'Update Docker Image Version'
        run: |
          kubectl set image deployment/flaskapp flaskapp=cyberprince/argocd-experiment:v1.0
